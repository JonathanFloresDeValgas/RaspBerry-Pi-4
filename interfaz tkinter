import tkinter as tk
from tkinter import ttk
import serial
import threading

# Configurar puerto serial
ser = serial.Serial('COMX', 115200)  # Cambia COMX al puerto correspondiente

# Variables globales
temperatura = tk.StringVar(value="0.0")
humedad = tk.StringVar(value="0.0")
ventilador_estado = tk.StringVar(value="Apagado")

def actualizar_datos():
    """Lee datos de la ESP y actualiza la interfaz."""
    while True:
        if ser.in_waiting > 0:
            linea = ser.readline().decode('utf-8').strip()
            if "Temp:" in linea:
                datos = linea.split("\t")
                temp = datos[1].split(":")[1].strip()
                hum = datos[0].split(":")[1].strip()
                temperatura.set(temp)
                humedad.set(hum)

def encender_ventilador():
    """Enciende el ventilador enviando comando a la ESP."""
    ser.write(b'ON\n')
    ventilador_estado.set("Encendido")

def apagar_ventilador():
    """Apaga el ventilador enviando comando a la ESP."""
    ser.write(b'OFF\n')
    ventilador_estado.set("Apagado")

# Crear ventana principal
ventana = tk.Tk()
ventana.title("Control de Ventilador")
ventana.geometry("400x300")

# Etiquetas de datos
ttk.Label(ventana, text="Temperatura (°C):").pack()
ttk.Label(ventana, textvariable=temperatura).pack()
ttk.Label(ventana, text="Humedad (%):").pack()
ttk.Label(ventana, textvariable=humedad).pack()

# Animación del ventilador (simulada con texto)
canvas = tk.Canvas(ventana, width=200, height=200)
canvas.pack()
ventilador = canvas.create_oval(50, 50, 150, 150, fill="blue")

def animar_ventilador():
    """Simula el movimiento del ventilador."""
    if ventilador_estado.get() == "Encendido":
        canvas.move(ventilador, 2, 0)
        if canvas.coords(ventilador)[2] > 200:
            canvas.move(ventilador, -150, 0)
    ventana.after(100, animar_ventilador)

# Botones de control manual
ttk.Button(ventana, text="Encender Ventilador", command=encender_ventilador).pack()
ttk.Button(ventana, text="Apagar Ventilador", command=apagar_ventilador).pack()

# Iniciar animación
animar_ventilador()

# Hilo para lectura serial
hilo_lectura = threading.Thread(target=actualizar_datos, daemon=True)
hilo_lectura.start()

ventana.mainloop()
